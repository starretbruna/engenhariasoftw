1:
As principais técnicas de levantamento de requisitos incluem entrevistas, cenários, workshops, questionários e observação. As entrevistas envolvem conversas diretas com stakeholders, permitindo um entendimento profundo, mas podem ser demoradas e sujeitas a viés. Os cenários consistem em criar histórias sobre como os usuários interagem com o sistema, facilitando a visualização e identificação de requisitos, embora possam ser subjetivos.
Os workshops são reuniões colaborativas que geram consenso rapidamente, mas podem ser dominados por participantes mais assertivos. Questionários permitem coletar dados de muitos usuários de forma rápida, mas as respostas podem ser superficiais. A observação direta oferece insights sobre comportamentos reais, mas pode ser difícil de organizar e interpretar.
As entrevistas focam na coleta de informações específicas, enquanto os cenários descrevem situações de uso. As entrevistas são geralmente estruturadas, enquanto os cenários são narrativas mais flexíveis. A interação nas entrevistas é direta e pessoal, enquanto os cenários promovem discussões em grupo. Ambas as técnicas são complementares e podem ser usadas juntas para uma compreensão mais completa dos requisitos.

2:
A validação de requisitos é crucial no contexto do documento de arquitetura de software porque garante que os requisitos atendam às necessidades dos stakeholders e estejam alinhados com os objetivos do projeto. Esse processo ajuda a identificar inconsistências, ambiguidades e falhas nos requisitos antes que a implementação comece, reduzindo o risco de retrabalho e economizando tempo e recursos. Além disso, a validação assegura que todos os requisitos são viáveis e realizáveis dentro das restrições técnicas e de negócio. Ao confirmar que os requisitos são compreendidos e aceitos por todas as partes interessadas, a validação contribui para a construção de um sistema que realmente agrega valor e atende às expectativas, resultando em maior satisfação do cliente e sucesso do projeto.

3:
A técnica de prototipação consiste em criar uma versão preliminar ou modelo de um sistema que simula suas funcionalidades e interfaces. Essa abordagem permite que os stakeholders visualizem e interajam com o sistema antes de sua implementação final. Para levantar requisitos, a prototipação ajuda a esclarecer as necessidades dos usuários, permitindo que eles experimentem e forneçam feedback sobre as funcionalidades desejadas. Isso facilita a identificação de requisitos que podem não ter sido considerados inicialmente.
Na validação de requisitos, a prototipação oferece uma representação tangível do sistema, permitindo que os stakeholders verifiquem se os requisitos foram corretamente interpretados e se atendem às suas expectativas. O feedback obtido durante essa fase pode levar a ajustes e refinamentos nos requisitos, garantindo que o produto final esteja alinhado com as necessidades dos usuários. Assim, a prototipação é uma ferramenta valiosa tanto para a coleta quanto para a validação de requisitos, promovendo uma comunicação mais eficaz entre desenvolvedores e usuários.

4:
A técnica de etnografia envolve a observação direta e o estudo do comportamento dos usuários em seu ambiente natural, com o objetivo de entender suas práticas, necessidades e interações com os sistemas existentes. Essa abordagem é especialmente útil para o levantamento de requisitos em sistemas complexos, pois permite uma compreensão profunda do contexto em que os usuários operam, revelando aspectos que podem não ser capturados por métodos tradicionais de coleta de requisitos, como entrevistas ou questionários. Ao observar como os usuários realmente utilizam os sistemas e interagem com seu ambiente, os analistas podem identificar requisitos implícitos, desafios e oportunidades de melhoria. Essa rica compreensão do comportamento e das necessidades dos usuários resulta em requisitos mais precisos e relevantes, contribuindo para o desenvolvimento de soluções que realmente atendam às expectativas e necessidades do público-alvo.

5:
No contexto do QFD (Quality Function Deployment), os três tipos de requisitos são requisitos do cliente, requisitos técnicos e requisitos de produção. Os requisitos do cliente representam as necessidades e expectativas dos usuários finais em relação ao produto ou serviço, refletindo o que eles valorizam e desejam. Os requisitos técnicos são as especificações e características que a equipe de desenvolvimento deve atender para satisfazer os requisitos do cliente, traduzindo as demandas do usuário em parâmetros técnicos. Já os requisitos de produção referem-se às condições e capacidades necessárias para fabricar o produto, incluindo aspectos como custo, tempo de produção e viabilidade técnica. Juntos, esses três tipos de requisitos ajudam a garantir que o produto final atenda tanto às expectativas dos clientes quanto às limitações e capacidades da equipe de desenvolvimento e produção.

6:
Realizar entrevistas formais e informais com stakeholders durante o levantamento de requisitos oferece várias vantagens. As entrevistas formais proporcionam uma estrutura clara, permitindo a coleta de informações detalhadas e consistentes, além de facilitar a documentação e a análise dos requisitos. Elas ajudam a garantir que todos os aspectos importantes sejam abordados e que as expectativas dos stakeholders sejam claramente compreendidas. Por outro lado, as entrevistas informais promovem um ambiente mais descontraído, encorajando os stakeholders a se expressarem livremente, o que pode revelar insights valiosos e requisitos não considerados. Essa combinação de abordagens formais e informais enriquece o processo de levantamento de requisitos, resultando em uma compreensão mais abrangente das necessidades e prioridades dos stakeholders.

7:
O uso de cenários na engenharia de requisitos contribui ao proporcionar uma representação contextual das interações dos usuários com o sistema, permitindo que os analistas visualizem como as funcionalidades atenderão às necessidades reais em situações específicas. Isso ajuda a identificar requisitos funcionais e não funcionais de forma mais clara e a antecipar desafios que podem surgir na experiência do usuário. Os cenários compartilham pontos em comum com os estudos de UX (experiência do usuário) e UI (interface do usuário), pois todos se concentram na compreensão das necessidades e comportamentos dos usuários, visando criar soluções que sejam intuitivas e satisfatórias. Além disso, tanto os cenários quanto os estudos de UX/UI utilizam narrativas e representações visuais para comunicar ideias e facilitar a colaboração entre equipes multidisciplinares, assegurando que o design e a funcionalidade do sistema estejam alinhados com as expectativas dos usuários.

8:
O conceito de caso de uso refere-se a uma descrição detalhada de como um usuário (ou ator) interage com um sistema para atingir um objetivo específico. Ele captura as funcionalidades do sistema a partir da perspectiva do usuário, delineando as etapas que ocorrem durante essa interação, incluindo as entradas, as ações do sistema e as saídas esperadas. Os casos de uso ajudam a identificar e organizar as interações em um sistema, permitindo que os desenvolvedores compreendam melhor os requisitos funcionais e as expectativas dos usuários. Além disso, eles servem como uma ferramenta de comunicação entre as partes interessadas, facilitando a discussão sobre funcionalidades e garantindo que todos tenham uma visão comum do que o sistema deve realizar. Ao mapear essas interações, os casos de uso também auxiliam na identificação de cenários de erro e exceções, contribuindo para um design mais robusto e centrado no usuário.

9:
A técnica JAD (Joint Application Development) facilita o trabalho colaborativo durante o levantamento de requisitos ao reunir, em um ambiente estruturado, todas as partes interessadas, incluindo usuários finais, desenvolvedores e gerentes de projeto, para discutir e definir os requisitos do sistema de forma conjunta. Essa abordagem promove a comunicação aberta e a troca de ideias, permitindo que os participantes compartilhem suas perspectivas e conhecimentos, o que resulta em uma compreensão mais profunda das necessidades do usuário. O JAD também acelera o processo de levantamento de requisitos, pois as decisões são tomadas em tempo real, reduzindo a necessidade de revisões e reuniões adicionais. Além disso, a técnica ajuda a construir um senso de propriedade e compromisso entre os stakeholders, uma vez que todos têm a oportunidade de contribuir para o desenvolvimento do sistema, aumentando assim a aceitação e a satisfação com o resultado final.

10:
No contexto do QFD (Quality Function Deployment), os requisitos normais, esperados e fascinantes representam diferentes níveis de expectativa do cliente em relação a um produto ou serviço. Requisitos normais são aqueles que os clientes consideram essenciais; sua presença é fundamental para a satisfação básica, mas não geram surpresa. Requisitos esperados são aqueles que os clientes assumem que o produto ou serviço deve ter; sua ausência pode levar à insatisfação, mas sua presença não necessariamente gera entusiasmo. Já os requisitos fascinantes são aqueles que superam as expectativas dos clientes e proporcionam uma experiência surpreendente e memorável; sua inclusão pode criar um forte diferencial competitivo e fidelizar os clientes. Em resumo, enquanto os requisitos normais e esperados atendem às necessidades básicas, os requisitos fascinantes têm o potencial de encantar e surpreender, elevando a percepção de valor do produto ou serviço.

11:
A combinação entre etnografia e prototipação no desenvolvimento de um sistema permite uma abordagem centrada no usuário que integra a compreensão profunda do contexto e das necessidades dos usuários com a criação de soluções tangíveis. A etnografia envolve a observação e a imersão no ambiente dos usuários, permitindo que os desenvolvedores identifiquem comportamentos, desafios e expectativas reais. Essa compreensão é fundamental para informar o design do sistema. Em seguida, a prototipação possibilita a criação de representações visuais ou funcionais das ideias, permitindo que os usuários interajam com as soluções propostas de forma prática. Essa interação gera feedback valioso, que pode ser utilizado para refinar e ajustar o sistema de acordo com as necessidades identificadas na fase etnográfica. Assim, essa combinação não apenas garante que o sistema atenda às expectativas dos usuários, mas também promove um processo iterativo que melhora continuamente a usabilidade e a eficácia da solução final.

12:
A "tabela da voz do cliente" no QFD (Quality Function Deployment) é uma ferramenta que captura e organiza as necessidades e expectativas dos clientes em relação a um produto ou serviço. Essa tabela traduz as opiniões e desejos dos usuários em requisitos técnicos e especificações que a equipe de desenvolvimento deve considerar. Sua relevância no processo de levantamento de requisitos reside no fato de que ela ajuda a garantir que as vozes dos clientes sejam ouvidas e priorizadas, permitindo que a equipe compreenda o que realmente importa para os usuários. Além disso, a tabela facilita a comunicação entre stakeholders, alinha as expectativas e orienta as decisões de design e desenvolvimento, aumentando a probabilidade de que o produto final atenda ou supere as expectativas dos clientes, resultando em maior satisfação e sucesso no mercado.

13:A técnica de caso de uso pode ser menos adequada em contextos onde a complexidade das interações humanas e o comportamento do usuário são cruciais para entender as necessidades do sistema, como em ambientes onde o uso do produto é altamente variável ou onde os usuários têm diferentes níveis de experiência e expectativas. Em situações em que o contexto cultural, social ou ambiental impacta significativamente a forma como os usuários interagem com o sistema, a etnografia se torna mais apropriada, pois permite uma observação aprofundada e uma compreensão holística das práticas e desafios dos usuários. Além disso, em projetos inovadores ou em desenvolvimento de produtos que ainda não têm um modelo de uso claro, a etnografia pode fornecer insights valiosos sobre as necessidades não articuladas dos usuários, enquanto os casos de uso podem se limitar a cenários já conhecidos e estruturados.

14: 
Os quatro princípios fundamentais da técnica JAD (Joint Application Development) são: a colaboração entre usuários e desenvolvedores, a facilitação de um ambiente produtivo e criativo, a definição clara de objetivos e a documentação e análise das informações coletadas. Um princípio que é incorretamente associado à técnica JAD é a ideia de que a JAD deve ser conduzida de forma totalmente informal e sem estrutura; na verdade, JAD requer uma abordagem estruturada e facilitada para garantir que todos os participantes contribuam efetivamente e que os objetivos da reunião sejam alcançados.

15:
A ausência de requisitos esperados em um sistema de software pode impactar negativamente a satisfação do cliente ao resultar em um produto que não atende às suas necessidades e expectativas. Isso pode levar a funcionalidades faltantes, experiências de uso frustrantes e um desempenho insatisfatório, fazendo com que o cliente sinta que o software não resolve seus problemas ou não agrega valor ao seu trabalho. Além disso, a falta de requisitos pode gerar retrabalho, atrasos e custos adicionais, contribuindo para uma percepção negativa do projeto e da equipe de desenvolvimento. Em última análise, isso pode resultar em perda de confiança na empresa fornecedora e diminuição da lealdade do cliente.

